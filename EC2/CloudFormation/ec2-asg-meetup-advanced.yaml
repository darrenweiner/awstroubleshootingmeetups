Resources:
  EC2SecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: Security group for ec2 test
      VpcId:
        !Ref vpcid
      Tags:
        - Key: Name
          Value: !Sub '${org}-${environment}-${vpcStack}'
        - Key: environment
          Value: !Ref environment
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          SourceSecurityGroupId: !Ref ALBSecurityGroup
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          SourceSecurityGroupId: !Ref ALBSecurityGroup
      SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: 0
          ToPort: 65535
          CidrIp: 0.0.0.0/0
  IamInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - !Ref EC2Role
  EC2Role:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
              - ec2.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Description: Role for IAM Profile
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore
      RoleName: !Join
        - '-'
        - - 'Meetup-EC2Role'
          - !Ref vpcStack
  LaunchTemplate:
    Type: 'AWS::EC2::LaunchTemplate'
    Properties:
      LaunchTemplateName: !Sub 'amazonlinux2-${vpcStack}'
      LaunchTemplateData:
        IamInstanceProfile:
          Arn: !GetAtt IamInstanceProfile.Arn
        UserData: IyEvYmluL2Jhc2gKc3VkbyB5dW0gaW5zdGFsbCAteSBodHRwZCAKI3N1ZG8gc3lzdGVtY3RsIHN0YXJ0IGh0dHBkCiNzdWRvIHN5c3RlbWN0bCBlbmFibGUgaHR0cGQKI1Rha2UgdGhlIHJlZCBwaWxsLCBuZW8=
        TagSpecifications:
          - ResourceType: instance
            Tags:
              - Key: org
                Value: !Ref org
              - Key: environment
                Value: !Ref environment
        InstanceInitiatedShutdownBehavior: stop
        SecurityGroupIds:
          - !Ref EC2SecurityGroup
        EbsOptimized: !Ref EbsOptimized
        DisableApiTermination: False
        ImageId: !Ref amiid
        InstanceType: !Ref InstanceType
        Monitoring: !Ref "AWS::NoValue"
        CreditSpecification: !Ref "AWS::NoValue"
  AutoscalingGroup:
    Type: 'AWS::AutoScaling::AutoScalingGroup'
    Properties:
      AutoScalingGroupName: !Sub 'ASG-${org}-${environment}-${vpcStack}'
      Cooldown: !Ref 'AWS::NoValue'
      DesiredCapacity: !Ref DesiredCapacity
      HealthCheckGracePeriod: !Ref HealthCheckGracePeriod
      HealthCheckType: 'EC2'
      LaunchTemplate:
        LaunchTemplateId: !Ref LaunchTemplate
        Version: !Ref LaunchTemplateVersion
      MaxSize: !Ref MaxSize
      MinSize: !Ref MinSize
      Tags:
        - Key: Name
          Value: !Sub '${org}-${environment}-${vpcStack}'
          PropagateAtLaunch: True
        - Key: environment
          Value: !Ref environment
          PropagateAtLaunch: True
        - Key: org
          Value: !Ref org
          PropagateAtLaunch: True
      TargetGroupARNs:
        - !Ref TargetGroup1
      TerminationPolicies:
        - OldestInstance
      VPCZoneIdentifier:
            - !Ref subnet1Private
            - !Ref subnet2Private
            - !Ref subnet3Private
  ElasticLoadBalancer:
    Type: 'AWS::ElasticLoadBalancingV2::LoadBalancer'
    Properties:
      LoadBalancerAttributes:
        - Key: routing.http2.enabled
          Value: "true"
        - Key: idle_timeout.timeout_seconds
          Value: "600"
        - Key: deletion_protection.enabled
          Value: "false"
      Name: !Sub '${environment}-${vpcStack}-loadbalancer'
      Scheme: !Ref loadbalancerscheme
      SecurityGroups:
        - !Ref ALBSecurityGroup
      Subnets:
        - !Ref subnet1Public
        - !Ref subnet2Public
        - !Ref subnet3Public
      Tags:
        - Key: org
          Value: !Ref org
        - Key: environment
          Value:  !Ref environment
      Type: application
      IpAddressType: ipv4
  ALBSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: Allow http and https into alb
      VpcId:
        !Ref vpcid
      Tags:
        - Key: Name
          Value: !Sub '${environment}-${vpcStack}-ALBSG'
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: 0
          ToPort: 65535
          CidrIp: 0.0.0.0/0
  TargetGroup1:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckIntervalSeconds: 60
      HealthCheckPath: /
      HealthCheckPort: "80"
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 2
      Matcher:
        HttpCode: 200,403
      Name: !Join
        - '-'
        - - !Sub '${environment}TargetGroup80'
          - !Ref vpcStack
      Port: 80
      Protocol: HTTP
      Tags:
        - Key: org
          Value: !Ref org
      TargetGroupAttributes:
        - Key: deregistration_delay.timeout_seconds
          Value: "30"
      TargetType: instance
      UnhealthyThresholdCount: 2
      VpcId:
        !Ref vpcid
  Listener80:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - TargetGroupArn: !Ref TargetGroup1
          Type: forward
      LoadBalancerArn: !Ref ElasticLoadBalancer
      Port: 80
      Protocol: HTTP
Parameters:
  org:
    Type: 'String'
    Default: cb
    Description: organization
  environment:
    Type: String
    Default: production
    Description: environment
  level:
    Type: String
    Default: benchmark
    Description: level of difficulty
  InstanceType:
    Type: 'String'
    Default: t2.micro
    Description: instance size
  amiid:
    Type: AWS::EC2::Image::Id
    Default: ami-0d8e584a484d346ae
    Description: ami id
  EbsOptimized:
    Type: String
    Default: false
    Description:  Ebs Optimized?
  vpcStack:
    Type: String
    Default: adv
    Description:  which cf to link to
  LaunchTemplateVersion:
    Type: String
    Default: 1
    Description: Launch Template Version
  HealthCheckGracePeriod:
    Type: String
    Default: 900
    Description:  period after which to start health monitoring
  MinSize:
    Type: String
    Default: 0
    Description:  Minimum size of asg
  MaxSize:
    Type: String
    Default: 1
    Description:  Maximum size of asg
  DesiredCapacity:
    Type: String
    Default: 0
    Description: Desired Capacity size of asg
  loadbalancerscheme:
    Type: String
    Default: internet-facing
    Description: internet-facing or internal
  vpcid:
    Type: String
    Default: None
  subnet1Public:
    Type: String
    Default: None
  subnet2Public:
    Type: String
    Default: None
  subnet3Public:
    Type: String
    Default: None
  subnet1Private:
    Type: String
    Default: None
  subnet2Private:
    Type: String
    Default: None
  subnet3Private:
    Type: String
    Default: None
Outputs:
    ElasticLoadBalancerDNS:
      Description: Load balancer dns
      Value: !GetAtt ElasticLoadBalancer.DNSName



