Resources:
  lambdaFunction:
    Type: AWS::Lambda::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      FunctionName: 'cloudbutton-s3-copy'
      Handler: index.lambda_handler
      Runtime: python3.7
      Role: !GetAtt MeetupIamRole.Arn
      Code:
        ZipFile: |
          import boto3
          import json
          def lambda_handler(event, context):
              import boto3
              s3 = boto3.resource('s3')
              copy_source = {
                  'Bucket': 'cloudbutton-meetups',
                  'Key': 'Images/LogoIcon.png'
              }
              bucket = s3.Bucket('dw-ephemeral')
              obj = bucket.Object('LogoIcon.png')
              obj.copy(copy_source)

              # TODO implement
              return {
                  'statusCode': 200,
                  'body': json.dumps('complete!')
              }
  MeetupIamRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: 'cloudbutton-meetup-s3copy-role'
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AdministratorAccess
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: /
  MeetupIAMPolicy:
    Type: AWS::IAM::Policy
    Properties:
      Roles:
        - !Ref MeetupIamRole
      PolicyName: 's3-pull-policy'
      PolicyDocument:
        Statement:
          - Action:
              - s3:PutObject*
            Effect: Allow
            Resource:
              - 'arn:aws:s3:::dw-ephemeral/*'
          - Action:
              - s3:GetObject*
            Effect: Allow
            Resource:
              - 'arn:aws:s3:::cloudbutton-meetups/*'
