AWSTemplateFormatVersion: 2010-09-09
Conditions:
  azCount3: !Equals [ !Ref azCount, "3" ]
Resources:
  EC2ASG:
      Type: AWS::CloudFormation::Stack
      Properties:
        Parameters:
          vpcStack: !Sub '${AWS::StackName}'
          vpcid: !Ref VpcId
          subnet1Public: !Ref subnet1Public
          subnet2Public: !Ref subnet2Public
          subnet3Public: !Ref subnet3Public
          subnet1Private: !Ref subnet1Private
          subnet2Private: !Ref subnet2Private
          subnet3Private: !Ref subnet3Private
        Tags:
          - Key: org
            Value: !Ref org
        TemplateURL: https://cloudbutton-meetups.s3-us-west-2.amazonaws.com/EC2/CloudFormation/ec2-asg-meetup-advanced.yaml
        TimeoutInMinutes: 15
  subnet1associationPrivate:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      RouteTableId: !Ref routetable1Private
      SubnetId: !Ref subnet1Private
  subnet2associationPrivate:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      RouteTableId: !Ref routetable1Private
      SubnetId: !Ref subnet2Private
  subnet3associationPrivate:
    Condition: azCount3
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      RouteTableId: !Ref routetable1Private
      SubnetId: !Ref subnet3Private
  subnet1associationPublic:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      RouteTableId: !Ref routetable1Public
      SubnetId: !Ref subnet1Public
  subnet2associationPublic:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      RouteTableId: !Ref routetable1Public
      SubnetId: !Ref subnet2Public
  subnet3associationPublic:
    Condition: azCount3
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      RouteTableId: !Ref routetable1Public
      SubnetId: !Ref subnet3Public
  route1Private:
    Type: 'AWS::EC2::Route'
    Properties:
      RouteTableId: !Ref routetable1Private
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGateway1
  route1Public:
    Type: 'AWS::EC2::Route'
    Properties:
      RouteTableId: !Ref routetable1Public
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
  routetable1Private:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId:
        !Ref VpcId
      Tags:
        - Key: department
          Value: !Ref department
        - Key: Name
          Value: !Sub '${department}-uswest2-priv'
        - Key: org
          Value: !Ref org
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 625d422c-cfde-45aa-a4ac-2ea32ac48aab
  routetable1Public:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId:
        !Ref VpcId
      Tags:
        - Key: Name
          Value: !Sub '${department}-uswest2-public'
        - Key: org
          Value: !Ref org
  subnet1Private:
    Type: 'AWS::EC2::Subnet'
    Properties:
      AvailabilityZone: !Select
       - 0
       - Fn::GetAZs: !Ref 'AWS::Region'
      CidrBlock: !Select [ 0, !Cidr [ !GetAtt VpcId.CidrBlock, 6, 8 ]]
      Tags:
        - Key: department
          Value: !Ref department
        - Key: Name
          Value: !Sub '${department}-us-west-2a-private'
        - Key: CostTag
          Value: !Ref department
      VpcId: !Ref VpcId
  subnet2Private:
    Type: 'AWS::EC2::Subnet'
    Properties:
      AvailabilityZone: !Select
        - 1
        - Fn::GetAZs: !Ref 'AWS::Region'
      CidrBlock: !Select [ 1, !Cidr [ !GetAtt VpcId.CidrBlock, 6, 8 ]]
      Tags:
        - Key: Name
          Value: !Sub '${department}-us-west-2b-private'
        - Key: CostTag
          Value: !Ref department
      VpcId: !Ref VpcId
  subnet3Private:
    Condition: azCount3
    Type: 'AWS::EC2::Subnet'
    Properties:
      AvailabilityZone: !Select
        - 2
        - Fn::GetAZs: !Ref 'AWS::Region'
      CidrBlock: !Select [ 2, !Cidr [ !GetAtt VpcId.CidrBlock, 6, 8 ]]
      Tags:
        - Key: department
          Value: !Ref department
        - Key: Name
          Value: !Sub '${department}-us-west-2c-private'
        - Key: CostTag
          Value: !Ref department
      VpcId: !Ref VpcId
  subnet1Public:
    Type: 'AWS::EC2::Subnet'
    Properties:
      AvailabilityZone: !Select
        - 0
        - Fn::GetAZs: !Ref 'AWS::Region'
      CidrBlock: !Select [ 3, !Cidr [ !GetAtt VpcId.CidrBlock, 6, 8 ]]
      Tags:
        - Key: department
          Value: !Ref department
        - Key: Name
          Value: !Sub '${department}-us-west-2a-public'
        - Key: CostTag
          Value: !Ref department
      VpcId: !Ref VpcId
  subnet2Public:
    Type: 'AWS::EC2::Subnet'
    Properties:
      AvailabilityZone: !Select
        - 1
        - Fn::GetAZs: !Ref 'AWS::Region'
      CidrBlock: !Select [ 4, !Cidr [ !GetAtt VpcId.CidrBlock, 6, 8 ]]
      Tags:
        - Key: department
          Value: !Ref department
        - Key: Name
          Value: !Sub '${department}-us-west-2b-public'
        - Key: CostTag
          Value: !Ref department
      VpcId: !Ref VpcId
  subnet3Public:
    Condition: azCount3
    Type: 'AWS::EC2::Subnet'
    Properties:
      AvailabilityZone: !Select
        - 2
        - Fn::GetAZs: !Ref 'AWS::Region'
      CidrBlock: !Select [ 5, !Cidr [ !GetAtt VpcId.CidrBlock, 6, 8 ]]
      Tags:
        - Key: department
          Value: !Ref department
        - Key: Name
          Value: !Sub '${department}-us-west-2c-public'
        - Key: CostTag
          Value: !Ref department
      VpcId: !Ref VpcId
  VPCGatewayAttach:
    Condition: false
    Type: 'AWS::EC2::VPCGatewayAttachment'
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref VpcId
  VpcId:
    Type: 'AWS::EC2::VPC'
    Properties:
      CidrBlock: !Ref vpccidr
      EnableDnsSupport: true
      EnableDnsHostnames: true
      InstanceTenancy: default
      Tags:
        - Key: department
          Value: !Ref department
        - Key: Name
          Value: !Sub '${department}-VPC'
        - Key: CostTag
          Value: !Ref department
        - Key: org
          Value: !Ref org
  Nacl1:
    Type: AWS::EC2::NetworkAcl
    Properties:
      Tags:
        - Key: org
          Value: !Ref org
      VpcId: !Ref VpcId
  myNetworkAclEntryEgress:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId:
        Ref: Nacl1
      RuleNumber: '100'
      Protocol: "-1"
      RuleAction: deny
      Egress: 'true'
      CidrBlock: 0.0.0.0/0
      PortRange:
        From: '0'
        To: '65536'
  myNetworkAclEntryIngress:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId:
        Ref: Nacl1
      RuleNumber: '100'
      Protocol: "-1"
      RuleAction: allow
      Egress: 'false'
      CidrBlock: 0.0.0.0/0
      PortRange:
        From: '0'
        To: '65536'
  InternetGateway:
    Type: 'AWS::EC2::InternetGateway'
    Properties:
      Tags:
        - Key: CostTag
          Value: !Ref department
        - Key: org
          Value: !Ref org
        - Key: department
          Value: !Ref department
  NatGateway1:
    Type: 'AWS::EC2::NatGateway'
    DependsOn: subnet1associationPublic
    Properties:
      AllocationId: !GetAtt EIP.AllocationId
      SubnetId: !Ref subnet1Public
      Tags:
        - Key: department
          Value: !Ref department
        - Key: CostTag
          Value: !Ref department
        - Key: org
          Value: !Ref org
  EIP:
    Type: 'AWS::EC2::EIP'
    Properties:
      Domain: vpc
Parameters:
  vpccidr:
    Type: String
    Default: 10.112.0.0/16
    Description: vpc cidr
  org:
    Type: String
    Default: cloudbutton
  department:
    Type: String
    Default: meetup
    Description: department
  azCount:
    Type: String
    Default: 3
    Description: choose to deploy VPC to 2 or 3 subnets
    AllowedValues: [ "2","3" ]
Outputs:
  subnet1Private:
    Description: private1 for meetup
    Value: !Ref subnet1Private
    Export:
      Name: !Join [ ":", [ !Ref "AWS::StackName", subnet1Private ] ]
  subnet2Private:
    Description: private2 for meetup
    Value: !Ref subnet2Private
    Export:
      Name: !Join [ ":", [ !Ref "AWS::StackName", subnet2Private ] ]
  subnet3Private:
    Condition: azCount3
    Description: private3 for meetup
    Value: !Ref subnet3Private
    Export:
      Name: !Join [ ":", [ !Ref "AWS::StackName", subnet3Private ] ]
  subnet1Public:
    Description: public1 for meetup
    Value: !Ref subnet1Public
    Export:
      Name: !Join [ ":", [ !Ref "AWS::StackName", subnet1Public ] ]
  subnet2Public:
    Description: public2 for meetup
    Value: !Ref subnet2Public
    Export:
      Name: !Join [ ":", [ !Ref "AWS::StackName", subnet2Public ] ]
  subnet3Public:
    Condition: azCount3
    Description: public3 for meetup
    Value: !Ref subnet3Public
    Export:
      Name: !Join [ ":", [ !Ref "AWS::StackName", subnet3Public ] ]